# bot_app/handlers.py
import re
from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from sqlalchemy.future import select

from .bot import dp
from .keyboard import main_menu, back_menu, confirm_download
from .models import User, Download
from .db import AsyncSessionLocal
from .worker import enqueue_download


# ------------------------------------------------------------
# /start
# ------------------------------------------------------------
@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ.
    """
    async with AsyncSessionLocal() as session:
        q = await session.execute(select(User).where(User.telegram_id == message.from_user.id))
        user = q.scalar_one_or_none()
        if user is None:
            session.add(User(telegram_id=message.from_user.id))
            await session.commit()

    await message.answer(
        "üëã –ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ –∑ YouTube, —ñ —è –π–æ–≥–æ —Å–∫–∞—á–∞—é üé¨",
        reply_markup=main_menu(),
    )


# ------------------------------------------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ ‚Äî –µ—Å–ª–∏ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ
# ------------------------------------------------------------
YOUTUBE_REGEX = re.compile(r"(https?://)?(www\.)?(youtube\.com|youtu\.be)/")

@dp.message(F.text)
async def handle_url_or_command(message: Message):
    """
    –õ–æ–≤–∏–º –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –µ—Å–ª–∏ —ç—Ç–æ YouTube-—Å—Å—ã–ª–∫–∞ ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å.
    """
    text = message.text.strip()
    if YOUTUBE_REGEX.search(text):
        await message.answer(
            f"üîó –ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:\n{text}\n\n–ü–æ—á–∞—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è?",
            reply_markup=confirm_download(text),
        )
    else:
        await message.answer(
            "‚ö†Ô∏è –¶–µ –Ω–µ —Å—Ö–æ–∂–µ –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è YouTube.\n–ù–∞–¥—ñ—à–ª—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É URL –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ üëá",
            reply_markup=main_menu(),
        )


# ------------------------------------------------------------
# Callback: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
# ------------------------------------------------------------
@dp.callback_query(F.data.startswith("download:"))
async def cb_download(call: CallbackQuery):
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ.
    """
    url = call.data.split("download:", 1)[1]
    await call.message.edit_text(f"üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑–ø–æ—á–∞—Ç–æ‚Ä¶\n{url}")

    job_id = await enqueue_download(call.from_user.id, url)
    await call.message.answer(
        f"‚úÖ –î–æ–¥–∞–Ω–æ –≤ —á–µ—Ä–≥—É (ID {job_id}).\n–ë–æ—Ç –ø–æ–≤—ñ–¥–æ–º–∏—Ç—å, –∫–æ–ª–∏ –≤—ñ–¥–µ–æ –±—É–¥–µ –≥–æ—Ç–æ–≤–µ.",
        reply_markup=main_menu(),
    )
    await call.answer()


# ------------------------------------------------------------
# Callback: –æ—Ç–º–µ–Ω–∞
# ------------------------------------------------------------
@dp.callback_query(F.data == "cancel")
async def cb_cancel(call: CallbackQuery):
    await call.message.edit_text("‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ.", reply_markup=main_menu())
    await call.answer()


# ------------------------------------------------------------
# –ù–∞–∑–∞–¥
# ------------------------------------------------------------
@dp.message(F.text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
async def cmd_back(message: Message):
    await message.answer("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", reply_markup=main_menu())


# ------------------------------------------------------------
# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
# ------------------------------------------------------------
@dp.message(F.text == "‚ÑπÔ∏è –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è")
async def cmd_help(message: Message):
    await message.answer(
        "üìò –Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å:\n"
        "1Ô∏è‚É£ –ù–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ –∑ YouTube\n"
        "2Ô∏è‚É£ –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è\n"
        "3Ô∏è‚É£ –î–æ—á–µ–∫–∞–π—Ç–µ—Å—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≥–æ—Ç–æ–≤–∏–π —Ñ–∞–π–ª\n\n"
        "–ë–æ—Ç —Å–∞–º –≤–∏–∫–æ–Ω–∞—î –≤—Å–µ —ñ–Ω—à–µ üí™",
        reply_markup=back_menu(),
    )


# ------------------------------------------------------------
# –í—ã—Ö–æ–¥
# ------------------------------------------------------------
@dp.message(F.text == "‚ùå –í–∏–π—Ç–∏")
async def cmd_exit(message: Message):
    await message.answer("–î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ üëã", reply_markup=back_menu())
    # –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –¥–ª—è "–≤–∏—Ö–æ–¥—É", —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ